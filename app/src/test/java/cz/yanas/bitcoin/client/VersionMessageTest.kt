package cz.yanas.bitcoin.client

import org.assertj.core.api.Assertions.assertThat
import org.assertj.core.util.DateUtil
import org.junit.Test
import java.io.ByteArrayInputStream
import java.io.ByteArrayOutputStream
import java.net.Inet6Address

class VersionMessageTest {

    private val isoDateTimeFormat = DateUtil.newIsoDateTimeWithIsoTimeZoneFormat()

    @Test
    @ExperimentalUnsignedTypes
    fun constructor() {
        val bytes = ubyteArrayOf(
            // protocolVersion
            0x80u, 0x11u, 0x01u, 0x00u,
            // services
            0x0Du, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            // timestamp
            0x73u, 0x59u, 0xA7u, 0x62u, 0x00u, 0x00u, 0x00u, 0x00u,
            // recipient
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u,
            // sender
            0x0Du, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x20u, 0x8Du,
            // nonce
            0x13u, 0x57u, 0xB4u, 0x3Au, 0x2Cu, 0x20u, 0x9Du, 0xDDu,
            // userAgent
            0x10u, 0x2Fu, 0x53u, 0x61u, 0x74u, 0x6Fu, 0x73u, 0x68u, 0x69u, 0x3Au, 0x32u, 0x33u, 0x2Eu, 0x30u, 0x2Eu, 0x30u, 0x2Fu,
            // blockHeight
            0xF5u, 0x4Cu, 0x0Bu, 0x00u,
            // relayTxs
            0x01u
        ).toByteArray()

        val message = VersionMessage(BitcoinInputStream(ByteArrayInputStream(bytes)))

        assertThat(message.protocolVersion).isEqualTo(70016)
        assertThat(message.services).isEqualTo(1037uL)
        assertThat(message.timestamp).isEqualTo("2022-06-13T15:36:19Z")
        assertThat(message.recipient.services).isEqualTo(0uL)
        assertThat(message.recipient.address).isEqualTo(Inet6Address.getByAddress(ByteArray(16)))
        assertThat(message.recipient.port).isEqualTo(0.toUShort())
        assertThat(message.sender.services).isEqualTo(1037uL)
        assertThat(message.sender.address).isEqualTo(Inet6Address.getByAddress(ByteArray(16)))
        assertThat(message.sender.port).isEqualTo(8333.toUShort())
        assertThat(message.nonce).isEqualTo(0xDD9D202C3AB45713uL)
        assertThat(message.userAgent).isEqualTo("/Satoshi:23.0.0/")
        assertThat(message.blockHeight).isEqualTo(740597)
        assertThat(message.relayTxs).isTrue()
    }

    @Test
    fun writeTo() {
        val message = VersionMessage(
            protocolVersion = 70001,
            timestamp = isoDateTimeFormat.parse("2022-06-13T15:36:19Z")!!,
            nonce = 0xDD9D202C3AB45713uL,
            userAgent = "/Satoshi:22.0.0/"
        )

        val baos = ByteArrayOutputStream()
        message.writeTo(BitcoinOutputStream(baos))

        assertThat(baos.toByteArray()).containsExactly(
            // protocolVersion
            0x71, 0x11, 0x01, 0x00,
            // services
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            // timestamp
            0x73, 0x59, 0xA7, 0x62, 0x00, 0x00, 0x00, 0x00,
            // recipient
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00,
            // sender
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00,
            // nonce
            0x13, 0x57, 0xB4, 0x3A, 0x2C, 0x20, 0x9D, 0xDD,
            // userAgent
            0x10, 0x2F, 0x53, 0x61, 0x74, 0x6F, 0x73, 0x68, 0x69, 0x3A, 0x32, 0x32, 0x2E, 0x30, 0x2E, 0x30, 0x2F,
            // blockHeight
            0x00, 0x00, 0x00, 0x00,
            // relayTxs
            0x00
        )
    }

}
